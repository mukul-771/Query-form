"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isFunctionSync = isFunctionSync;
exports.runCallback = runCallback;
exports.runCallbacks = runCallbacks;
exports.callFunction = callFunction;
exports.serializeError = serializeError;
exports.once = once;
function isFunctionSync(f) {
  return f.length === 0;
}

function runCallback(callback, context) {
  if (isFunctionSync(callback)) {
    try {
      return Promise.resolve(callback.call(context));
    } catch (err) {
      return Promise.reject(err);
    }
  } else {
    return new Promise((resolve, reject) => {
      callback.call(context, err => {
        if (err && err instanceof Error) {
          reject(err);
        } else {
          resolve();
        }
      });
    });
  }
}

function runCallbacks(callbacks, context) {
  let p = Promise.resolve();
  callbacks.forEach(callback => {
    p = p.then(() => runCallback(callback, context));
  });
  return p;
}

function callFunction(objs, funcName) {
  let p = Promise.resolve();
  objs.forEach(obj => {
    p = p.then(() => runCallback(obj[funcName], obj));
  });
  return p;
}

function serializeError(err) {
  let errorJson = {
    name: err.name,
    message: err.message,
    stack: err.stack
  };
  // add user defined properties
  Object.keys(err).forEach(prop => {
    errorJson[prop] = err[prop];
  });

  return errorJson;
}

function once(func, context) {
  return function () {
    if (func) {
      let result = func.apply(context, arguments);
      func = null;
      return result;
    }
  };
}