'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
class Emitter {
  constructor() {
    this._callbacks = {};
  }

  _eventName(name) {
    return '$' + name;
  }

  on(eventName, callback) {
    eventName = this._eventName(eventName);
    let eventCallbacks = this._callbacks[eventName];
    if (!eventCallbacks) {
      this._callbacks[eventName] = eventCallbacks = [];
    }

    eventCallbacks.push(callback);
    return this;
  }

  off(eventName, callback) {
    eventName = this._eventName(eventName);
    let eventCallbacks = this._callbacks[eventName];
    if (eventCallbacks) {
      let index = eventCallbacks.indexOf(callback);
      if (index >= 0) eventCallbacks.splice(index, 1);
    }

    return this;
  }

  emit(eventName) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    eventName = this._eventName(eventName);
    let eventCallbacks = this._callbacks[eventName];
    if (eventCallbacks) {
      eventCallbacks.forEach(callback => {
        callback.apply(this, args);
      });
    }
  }

  callbacks(eventName) {
    eventName = this._eventName(eventName);
    return this._callbacks[eventName];
  }
}
exports.Emitter = Emitter;