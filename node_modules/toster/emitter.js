export class Emitter {
  constructor() {
    this._callbacks = {};
  }

  _eventName(name) {
    return '$' + name;
  }

  on(eventName, callback) {
    eventName = this._eventName(eventName);
    let eventCallbacks = this._callbacks[eventName];
    if(!eventCallbacks) {
      this._callbacks[eventName] = eventCallbacks = [];
    }

    eventCallbacks.push(callback);
    return this;
  }

  off(eventName, callback) {
    eventName = this._eventName(eventName);
    let eventCallbacks = this._callbacks[eventName];
    if(eventCallbacks) {
      let index = eventCallbacks.indexOf(callback);
      if(index >= 0) eventCallbacks.splice(index, 1);
    }

    return this;
  }

  emit(eventName, ...args) {
    eventName = this._eventName(eventName);
    let eventCallbacks = this._callbacks[eventName];
    if(eventCallbacks) {
      eventCallbacks.forEach((callback) => {
        callback.apply(this, args);
      });
    }
  }

  callbacks(eventName) {
    eventName = this._eventName(eventName);
    return this._callbacks[eventName];
  }
}
